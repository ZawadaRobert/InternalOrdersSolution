<Window x:Class="InternalOrders.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:InternalOrders.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="600">
    <Window.Resources>
        <conv:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="4"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="4,0,4,0"/>
        </Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="4,0,4,0"/>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Margin" Value="4"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="4"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!-- Row 0 -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="Nazwa:" Width="auto"/>
            <TextBox Grid.Column="1" Name="txtBoxOrderName" Width="auto" IsReadOnly="{Binding IsReadOnly}"
                     Text="{Binding CurrOrder.Name, Mode=OneWay}"/>
            <StackPanel Grid.Column="2" Orientation="Horizontal" FlowDirection="RightToLeft" Margin="0">
                <Button Name="btnOrderChoose" Width="auto" Content="..." Click="btnOrderChoose_Click" />
                <Button Name="btnOrderNew" Width="auto" Content="☆" Click="btnOrderNew_Click" />
                <TextBox Name="txtBoxOrderId" Width="50" IsReadOnly="True"
                         Text="{Binding CurrOrder.OrderId, Mode=OneWay}"/>
            </StackPanel>
        </Grid>

        <!-- Row 1 -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Grid.Column="0">
                <Label Content="Opis:" Width="auto"/>
                <TextBox Name="txtBoxOrderDescription" Width="auto" Height="60" TextWrapping="Wrap"
                         AcceptsReturn="True" VerticalScrollBarVisibility="Auto" IsReadOnly="{Binding IsReadOnly}" 
                         Text="{Binding CurrOrder.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <StackPanel Orientation="Horizontal">
                    <CheckBox Name="chkBoxOrderCustomerFunded" Content="Customer Funded" Margin="4,0,10,0" VerticalAlignment="Center"
                              IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}"
                              Focusable="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}"
                              IsChecked="{Binding CurrOrder.CustomerFunded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Label Content="Numer Capexu:" Width="auto" VerticalAlignment="Center"/>
                    <TextBox Name="txtBoxOrderCapexNumber" IsReadOnly="{Binding IsReadOnly}" VerticalAlignment="Center"
                             Text="{Binding CurrOrder.CapexNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            <DataGrid Grid.Column="1" Name="gridApprovers" AutoGenerateColumns="False" IsReadOnly="True" Width="auto"
                      ItemsSource="{Binding CurrOrder.Approvers, UpdateSourceTrigger=PropertyChanged}" >
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="Canceled">
                                <Setter Property="Background" Value="LightGray"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Pending">
                                <Setter Property="Background" Value="LightYellow"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Approved">
                                <Setter Property="Background" Value="LightGreen"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Rejected">
                                <Setter Property="Background" Value="LightCoral"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Użytkownik" Binding="{Binding User.Name, Mode=OneWay}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        
        <!-- Row 2 -->
        <DataGrid Grid.Row="2" Name="gridItems" AutoGenerateColumns="false" IsReadOnly="{Binding IsReadOnly}" MinHeight="150"
                      ItemsSource="{Binding CurrOrder.Items, UpdateSourceTrigger=PropertyChanged}" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Indeks" Binding="{Binding RekordIndex, Mode=OneWay}" Width="auto"/>
                <DataGridTextColumn Header="Nazwa" Binding="{Binding Name, Mode=OneWay}" Width="*"/>
                <DataGridTextColumn Header="Cena" Binding="{Binding Price, Mode=OneWay}" Width="auto"/>
                <DataGridTextColumn Header="Ilość" Binding="{Binding Quantity, Mode=OneWay}" Width="auto"/>
                <DataGridTextColumn Header="Data Dostawy" Binding="{Binding DeliveryDate, Mode=OneWay}" Width="auto"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Row 3 -->
        <DataGrid Grid.Row="3" Name="gridAttachments" AutoGenerateColumns="false" IsReadOnly="{Binding IsReadOnly}" MinHeight="100"
                  ItemsSource="{Binding CurrOrder.Attachments, UpdateSourceTrigger=PropertyChanged}"
                  AllowDrop="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}" Drop="gridAttachments_Drop" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Nazwa" Binding="{Binding FileName, Mode=OneWay}" Width="*"/>
                <DataGridTextColumn Header="Opis" Binding="{Binding Description, Mode=OneWay}" Width="2*"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Row 4 -->
        <StackPanel Grid.Row="4" Orientation="Horizontal">
            <Button Name="btnSave" Content="Zapisz" Click="btnSave_Click"/>
            <ToggleButton Name="toggleEditable" Content="Włącz Edycję" 
                          IsChecked="{Binding IsReadOnly, Mode=TwoWay}"/>
            <TextBox/>
            <TextBox/>
        </StackPanel>
        
        
    </Grid>
</Window>
